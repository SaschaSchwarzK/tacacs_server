name: Quality Checks (Lint • Tests • CodeQL)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: "0 3 * * 1"  # weekly Monday 03:00 UTC (for CodeQL / deep scans)
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      cache-hit: ${{ steps.setup.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python and Poetry
        id: setup
        uses: ./.github/actions/setup-python-poetry

  quality:
    name: Lint (Ruff • Bandit)
    runs-on: ubuntu-latest
    needs: [setup]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-python-poetry

      - name: Ruff (lint)
        run: |
          poetry run ruff check .

      - name: Ruff (format check)
        run: |
          poetry run ruff format --check .

      - name: Bandit (security lint)
        run: |
          poetry run bandit -r . -x tests

      - name: Semgrep (CI rules)
        uses: semgrep/semgrep-action@e592f8c72de14b836b37d7b16a8e5d1e6e1b8b7e  # v1
        with:
          config: "p/ci"

  tests:
    name: Tests • Coverage
    runs-on: ubuntu-latest
    needs: [setup, quality]
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-python-poetry

      - name: Pytest (XML & coverage)
        run: |
          poetry run pytest -q \
            --junitxml=test-results/junit.xml \
            --cov=. --cov-report=xml:coverage.xml --cov-report=term-missing \
            --cov-fail-under=0

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-artifacts
          path: |
            test-results/junit.xml
            coverage.xml
          exclude: |
            **/*.env
            **/*.key
            **/*.pem
            **/*secret*
            **/*password*
            **/*token*
            **/*credential*

  codeql:
    name: CodeQL (Python)
    runs-on: ubuntu-latest
    needs: [setup]
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
      - uses: ./.github/actions/setup-python-poetry

      - name: Analyze
        uses: github/codeql-action/analyze@v3